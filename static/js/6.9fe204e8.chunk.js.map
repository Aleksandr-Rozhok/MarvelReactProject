{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","hooks/list.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicListItem","props","title","img","price","id","transitionSteak","_jsx","motion","li","className","custom","variants","visible","opacity","x","transition","delay","hidden","children","_jsxs","Link","to","concat","src","alt","ComicsList","_useList","useList","limit","type","list","offset","newItemLoading","itemEnded","loading","error","onRequest","comicsList","map","item","thumbnail","errorMessage","ErrorMessage","spinner","Spinner","ul","initial","animate","onClick","disabled","style","ComicsPage","_Fragment","Helmet","name","content","AppBanner","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getCharacter","res","_transformCharacter","results","getCharacterByName","_ref2","_callee2","_context2","_x2","getComic","_ref3","_callee3","_context3","_transformComics","_x3","getAllList","_ref4","_callee4","_args4","_context4","_x4","_x5","char","description","path","extension","homepage","urls","wiki","comics","items","comic","prices","desc","pageCount","language","textObjects","initialLoad","setList","_useState3","_useState4","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","setItemEnded","_useMarvelService","useEffect","offsetArg","onListLoading","then","onLoaded","newItem","ended","_toConsumableArray","avengers","avengersLogo"],"mappings":"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","file":"static/js/6.9fe204e8.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion/dist/framer-motion\";\r\n\r\nimport \"./comicsList.scss\";\r\n\r\nimport {useList} from \"../../hooks/list.hook\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nconst ComicsList = () => {\r\n    const {list, offset, newItemLoading, itemEnded, loading, error, onRequest} = useList({limit: 8, type: \"comics\"});\r\n\r\n    let comicsList = [];\r\n\r\n    if (list) {\r\n        let transitionSteak = 0;\r\n        comicsList = list.map((item) => {\r\n            transitionSteak < 8 ? transitionSteak++ : transitionSteak = 1;\r\n            return <ComicListItem \r\n                        key={item.id} \r\n                        id={item.id}\r\n                        img={item.thumbnail} \r\n                        title={item.title}\r\n                        price={item.price}\r\n                        transitionSteak={transitionSteak} />\r\n        })\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            <motion.ul \r\n                className=\"comics__grid\"\r\n                initial=\"hidden\"\r\n                animate=\"visible\">\r\n                {comicsList}\r\n            </motion.ul>\r\n            {spinner}\r\n            <button \r\n                onClick={() => onRequest(offset)}\r\n                disabled={newItemLoading}\r\n                style={{\"display\": itemEnded ? \"none\" : \"block\"}} \r\n                className=\"button button__main button__long\">\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ComicListItem = (props) => {   \r\n\r\n    const {title, img, price, id, transitionSteak} = props;\r\n\r\n    const item = {\r\n        visible: custom => ({ opacity: 1, x: 0, transition: { delay: custom * 0.2} }),\r\n        hidden: { opacity: 0, x: 0 },\r\n    }\r\n\r\n    return (\r\n        <motion.li \r\n            className=\"comics__item\" \r\n            key={id}\r\n            custom={transitionSteak}\r\n            variants={item}>\r\n            <Link to={`/comics/${id}`}>\r\n                <img src={img} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                <div className=\"comics__item-name\">{title}</div>\r\n                <div className=\"comics__item-price\">{`${price}$`}</div>\r\n            </Link>\r\n        </motion.li>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comic Page</title> \r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\"}}\r\n        src={img}\r\n        alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=a6eacca719853626695a719b3c3ca442\";\r\n    const _baseOffset = 210;\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllList = async (limit, type, offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}${type}?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        if (type === \"comics\") {\r\n            return res.data.results.map(_transformComics);\r\n        } else {\r\n            return res.data.results.map(_transformCharacter);\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            id: char.id,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            title: comic.title,\r\n            id: comic.id,\r\n            price: comic.prices[0].price,\r\n            thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n            desc: comic.description,\r\n            pageCount: comic.pageCount,\r\n            language: comic.textObjects.language\r\n        }\r\n    }\r\n\r\n    return { \r\n            clearError, \r\n            getCharacter, \r\n            getComic, \r\n            getAllList, \r\n            getCharacterByName, \r\n            process, \r\n            setProcess}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState(\"waiting\");\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"application/json\"}) => {\r\n        \r\n        setProcess(\"loading\");\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch(e) {\r\n            setProcess(\"error\");\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess(\"loading\");\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport useMarvelService from \"../services/MarvelService\";\r\n\r\nlet initialLoad = false;\r\n\r\nexport const useList = ({limit, type}) => {\r\n    const [list, setList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(410);\r\n    const [itemEnded, setItemEnded] = useState(false);\r\n\r\n    const {loading, error, getAllList} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset);\r\n    }, [])\r\n\r\n    const onRequest = (offsetArg) => {\r\n        onListLoading(true);\r\n        initialLoad = false;\r\n\r\n        getAllList(limit, type, offsetArg)\r\n            .then(onLoaded);\r\n    }\r\n\r\n    const onListLoading = (initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    }\r\n\r\n    const onLoaded = (newItem) => {\r\n        let ended = false;\r\n        if (newItem.length < limit) {\r\n            ended = true;\r\n        }\r\n\r\n        if (!initialLoad) {\r\n            initialLoad = true;\r\n            setList(items => [...items, ...newItem]);\r\n            setNewItemLoading(newItemLoading => false);\r\n            setOffset(offset => offset + limit);\r\n            setItemEnded(itemEnded => ended);\r\n        }\r\n    }\r\n\r\n    return {list, offset, newItemLoading, itemEnded, loading, error, onRequest}\r\n\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}