{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","_jsxs","_Fragment","children","_jsx","AppBanner","setContent","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","_useHttp","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","useHttp","_apiBase","_apiKey","res","_transformCharacter","results","getCharacterByName","_ref2","_callee2","name","_context2","map","_x2","_ref3","_callee3","_context3","_transformComics","_x3","getAllList","_ref4","_callee4","limit","type","offset","_args4","_context4","_x4","_x5","char","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","title","price","prices","desc","pageCount","language","textObjects","Skeleton","className","Spinner","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.965a38e6.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n        switch (dataType) {\r\n            case \"comic\":\r\n                getComic(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess(\"confirmed\"));\r\n                break;\r\n            case \"character\":\r\n                getCharacter(id)\r\n                    .then(onDataLoaded)\r\n                    .then(() => setProcess(\"confirmed\"));\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, Component, data)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n        style={{display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\"}}\r\n        src={img}\r\n        alt=\"Error\" />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from \"../hooks/http.hook\"\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=a6eacca719853626695a719b3c3ca442\";\r\n    const _baseOffset = 210;\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const getAllList = async (limit, type, offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}${type}?limit=${limit}&offset=${offset}&${_apiKey}`);\r\n        if (type === \"comics\") {\r\n            return res.data.results.map(_transformComics);\r\n        } else {\r\n            return res.data.results.map(_transformCharacter);\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            name: char.name,\r\n            id: char.id,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comic) => {\r\n        return {\r\n            title: comic.title,\r\n            id: comic.id,\r\n            price: comic.prices[0].price,\r\n            thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n            desc: comic.description,\r\n            pageCount: comic.pageCount,\r\n            language: comic.textObjects.language\r\n        }\r\n    }\r\n\r\n    return { \r\n            clearError, \r\n            getCharacter, \r\n            getComic, \r\n            getAllList, \r\n            getCharacterByName, \r\n            process, \r\n            setProcess}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState(\"waiting\");\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"application/json\"}) => {\r\n        \r\n        setProcess(\"loading\");\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        } catch(e) {\r\n            setProcess(\"error\");\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess(\"loading\");\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n\r\n}","import \"./skeleton.scss\";\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case \"waiting\":\r\n            return <Skeleton />;\r\n        case \"loading\":\r\n            return <Spinner />;\r\n        case \"confirmed\":\r\n            return <Component data={data} />;\r\n        case \"error\":\r\n            return <ErrorMessage />;\r\n        default:\r\n            throw new Error(\"Unexpected process state\");\r\n    }\r\n}\r\n\r\nexport default setContent;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import \"./appBanner.scss\";\r\nimport avengers from \"../../resources/img/Avengers.png\";\r\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}